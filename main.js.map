{"version":3,"file":"main.js","mappings":"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","sources":["webpack://quiz-beauty-test-task/./src/utile/control.ts","webpack://quiz-beauty-test-task/./src/app/components/header/header.ts","webpack://quiz-beauty-test-task/./src/app/components/footer/footer.ts","webpack://quiz-beauty-test-task/./src/app/pages/quiz/quiz.const.ts","webpack://quiz-beauty-test-task/./src/data/quiz.data.ts","webpack://quiz-beauty-test-task/./src/app/pages/quiz/round/round.ts","webpack://quiz-beauty-test-task/./src/app/pages/quiz/quiz.ts","webpack://quiz-beauty-test-task/./src/index.ts","webpack://quiz-beauty-test-task/./src/app/app.ts"],"sourcesContent":["\r\ntype atrType = {\r\n    name: string,\r\n    value: string,\r\n}\r\n\r\nexport class Control {\r\n    public node;\r\n\r\n    constructor(parentNode: HTMLElement | null, tagName: string, className: string | string[], content: string = '', atr?: atrType[]) {\r\n        const element = document.createElement(tagName);\r\n        \r\n        if (Array.isArray(className)) {\r\n            className.forEach(name => element.classList.add(name));\r\n        }\r\n        if (typeof className === 'string') {\r\n            element.className = className;\r\n        }\r\n\r\n        element.textContent = content;\r\n        \r\n        if (parentNode) {\r\n            parentNode.append(element);\r\n        }\r\n\r\n        if (atr) {\r\n            atr.forEach(el => element.setAttribute(el.name, el.value));\r\n        }\r\n\r\n        this.node = element;\r\n    }\r\n\r\n    destroy() {\r\n        this.node.remove();\r\n    }\r\n}","import { Control } from \"../../../utile/control\";\r\n\r\nexport class Header extends Control {\r\n    private wrap: Control;\r\n    private title: Control;\r\n    private author: Control;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        super(parent, 'header', 'header');\r\n        this.wrap = new Control(this.node, 'div', 'header__wrap');\r\n        this.title = new Control(this.wrap.node, 'h1', 'header__wrap__title', 'Beauty Quiz');\r\n        this.author = new Control(this.wrap.node, 'h2', 'header__wrap__author', 'Мария Ващаева');\r\n    }\r\n\r\n    destroy(): void {\r\n        super.destroy();\r\n    }\r\n}","import { Control } from \"../../../utile/control\";\r\n\r\ntype LinkType = {\r\n    name: string,\r\n    url: string,\r\n    icon: string,\r\n}\r\n\r\nexport class Footer extends Control {\r\n    private wrap: Control;\r\n    private copyWrite: Control;\r\n    private myLinks: Control;\r\n    private linkItem: Control;\r\n    private linkItems: LinkType[] = [\r\n        {\r\n            name: 'gitHub',\r\n            url: 'https://github.com/MaryAnzh',\r\n            icon: ''\r\n        },\r\n        {\r\n            name: 'linkedin',\r\n            url: 'https://www.linkedin.com/in/maryia-vashchayeva-511313240/',\r\n            icon: ''\r\n        },\r\n    ]\r\n\r\n    constructor(parent: HTMLElement) {\r\n        super(parent, 'footer', 'footer');\r\n        this.wrap = new Control(this.node, 'div', 'footer__wrap');\r\n        this.copyWrite = new Control(this.wrap.node, 'p', 'footer__wrap__copywrite', '©2023, Minsk');\r\n        this.myLinks = new Control(this.wrap.node, 'ul', 'footer__wrap__links');\r\n        this.linkItems.forEach(({ name, url, icon }) => {\r\n            const link = new Control(this.myLinks.node, 'li', 'footer__wrap__links__item');\r\n            const a = new Control(link.node,\r\n                'a',\r\n                'footer__wrap__links__item__link',\r\n                name,\r\n                [{ name: 'href', value: url },\r\n                { name: 'target', value: '_blank' },\r\n                { name: 'rel', value: 'noreferrer' }]);\r\n        });\r\n\r\n    }\r\n\r\n    destroy(): void {\r\n        super.destroy();\r\n    }\r\n}","export const quizConst = {\r\n    title: 'Онлайн-подбор средств для лица',\r\n    description: 'Пройдите короткий тест и получите список наиболее подходящих для вас косметических продуктов'\r\n}","export interface IRound {\r\n    question: string,\r\n    answer: string[]\r\n}\r\n\r\nexport const quizData: IRound[] = [\r\n    {\r\n        question: 'Сколько вам лет?',\r\n        answer: [\r\n            'Нужны средства для ребёнка младше 10 лет',\r\n            'Мне меньше 25 лет',\r\n            'От 25 до 35 лет',\r\n            'От 35 до 45 лет',\r\n            'Мне больше 45 лет'\r\n        ],\r\n    },\r\n    {\r\n        question: 'Какой у вас тип кожи?',\r\n        answer: [\r\n            'Сухая',\r\n            'Нормальная',\r\n            'Комбинированная',\r\n            'Жирная'\r\n        ],\r\n    },\r\n    {\r\n        question: 'Беспокоят ли воспаления на лице?',\r\n        answer: [\r\n            'Да',\r\n            'Нет',\r\n            'Иногда',\r\n        ],\r\n    },\r\n]","import { Control } from '../../../../utile/control'\r\nimport { IRound } from '../../../../data/quiz.data';\r\nimport { quizData } from '../../../../data/quiz.data';\r\n\r\nenum ButtonEnum {\r\n    Next = 'Дальше',\r\n    Prev = 'Назад',\r\n    Result = 'Узнать результат',\r\n};\r\n\r\nexport class Round extends Control {\r\n    infWrap: Control;\r\n    sliderCheckboxes: Control;\r\n    checkboxesSet: HTMLInputElement[] = [];\r\n    questionNumText: Control;\r\n    question: Control;\r\n    answerList: Control;\r\n    answerListSet: HTMLInputElement[] = [];\r\n    buttonsBlock: Control;\r\n    prevButton: Control;\r\n    nextButton: Control;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        super(parent, 'div', 'round');\r\n\r\n        //block1\r\n        this.infWrap = new Control(this.node, 'div', 'round__info');\r\n        this.sliderCheckboxes = new Control(this.infWrap.node, 'div', 'round__info__slider-checkboxes');\r\n        this.questionNumText = new Control(this.infWrap.node, 'p', 'round__info__question-num-text');\r\n        this.question = new Control(this.infWrap.node, 'p', 'round__info__question', quizData[0].question);\r\n        this.answerList = new Control(this.infWrap.node, 'ul', 'round__info__answer-list');\r\n\r\n        //block2\r\n        this.buttonsBlock = new Control(this.node, 'div', 'round__buttons');\r\n        this.prevButton = new Control(this.buttonsBlock.node, 'button', 'round__buttons__prev', ButtonEnum.Prev);\r\n        this.nextButton = new Control(this.buttonsBlock.node, 'button', 'round__buttons__next', ButtonEnum.Next);\r\n\r\n        this.createCheckBox(3);\r\n        this.addQuestionNumberText(1, 3);\r\n        this.createAnswerList(quizData[0].answer);\r\n    }\r\n\r\n    newRound = (data: IRound, number: number) => {\r\n\r\n    }\r\n\r\n    createCheckBox = (quantity: number) => {\r\n        [...Array(quantity).keys()].forEach(el => {\r\n            const box = new Control(this.sliderCheckboxes.node, 'div', 'round__info__slider-checkboxes__box');\r\n            const input = new Control(box.node, 'input', 'round__info__slider-checkboxes__box__input', null,\r\n                [\r\n                    { name: 'name', value: 'box' },\r\n                    { name: 'type', value: 'radio' },\r\n                    { name: 'id', value: `box-${el}` }\r\n                ])\r\n            const label = new Control(box.node, 'label', 'round__info__slider-checkboxes__box__label', null, [{ name: 'for', value: `box-${el}` }]);\r\n            const i = <HTMLInputElement>input.node;\r\n            this.checkboxesSet.push(i);\r\n        });\r\n        this.checkboxesSet[0].checked = true;\r\n    }\r\n\r\n    checkedBox = (number: number) => {\r\n        this.checkboxesSet[number].checked = true;\r\n    }\r\n\r\n    addQuestionNumberText = (questionNum: number, questionCount: number) => {\r\n        this.questionNumText.node.textContent = `Вопрос ${questionNum} из ${questionCount}`;\r\n    }\r\n\r\n    createAnswerList = (answers: string[]) => {\r\n        this.answerList.node.innerHTML = '';\r\n        [...Array(answers.length).keys()].forEach((index) => {\r\n            const answer = new Control(this.answerList.node, 'li', 'round__info__answer-list__answer');\r\n            const inputId = `answer_${index}`;\r\n            const input = new Control(answer.node, 'input', 'round__info__answer-list__answer__input', null,\r\n                [\r\n                    { name: 'name', value: 'answer' },\r\n                    { name: 'type', value: 'radio' },\r\n                    { name: 'id', value: inputId }\r\n                ])\r\n            const label = new Control(answer.node, 'label', 'round__info__answer-list__answer__label', null, [{ name: 'for', value: inputId }]);\r\n            label.node.textContent = answers[index];\r\n            const item = <HTMLInputElement>input.node;\r\n            this.answerListSet.push(item);\r\n        });\r\n    }\r\n\r\n    destroy(): void {\r\n        super.destroy();\r\n    }\r\n}","import { IRound, quizData } from '../../../data/quiz.data';\r\nimport { Control } from '../../../utile/control';\r\nimport { quizConst } from './quiz.const';\r\nimport { Round } from './round/round';\r\n\r\nexport class Quiz extends Control {\r\n    private title: Control;\r\n    private description: Control;\r\n    public round: Round | null = null;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        super(parent, 'section', 'quiz');\r\n        this.title = new Control(this.node, 'h2', 'quiz__title', quizConst.title);\r\n        this.description = new Control(this.node, 'p', 'quiz__description', quizConst.description);\r\n        this.round = new Round(this.node);\r\n    }\r\n\r\n    destroy(): void {\r\n        super.destroy();\r\n    }\r\n}\r\n","import './assets/style/style.scss';\r\nimport { App } from './app/app';\r\n\r\nconst body = document.querySelector('body');\r\nconst app = new App(body);\r\n\r\n\r\n// const onloadApp = () => {\r\n//     app;\r\n//     onloadPage();\r\n// }\r\n\r\n// window.onload = () => onloadApp();\r\n","import { Control } from '../utile/control';\r\nimport { Header } from './components/header/header';\r\nimport { Footer } from './components/footer/footer';\r\nimport { Quiz } from './pages/quiz/quiz';\r\n\r\nexport class App extends Control {\r\n    private header: Header;\r\n    private main: Control;\r\n    private footer: Footer;\r\n    public quiz: Quiz;\r\n\r\n\r\n    constructor(parent: HTMLElement) {\r\n        super(parent, 'div', 'wrapper');\r\n        this.header = new Header(this.node);\r\n        this.main = new Control(this.node, 'main', 'main');\r\n        this.footer = new Footer(this.node);\r\n        this.quiz = new Quiz(this.main.node);\r\n    }\r\n\r\n    showResult = () => {\r\n        this.main.node.textContent = 'Спасибо за ответы';\r\n    }\r\n\r\n    destroy(): void {\r\n        super.destroy();\r\n    }\r\n}"],"names":["Control","constructor","parentNode","tagName","className","content","atr","element","document","createElement","Array","isArray","forEach","name","classList","add","textContent","append","el","setAttribute","value","this","node","destroy","remove","Header","parent","super","wrap","title","author","Footer","linkItems","url","icon","copyWrite","myLinks","link","quizData","question","answer","ButtonEnum","Round","checkboxesSet","answerListSet","newRound","data","number","createCheckBox","quantity","keys","box","sliderCheckboxes","input","i","push","checked","checkedBox","addQuestionNumberText","questionNum","questionCount","questionNumText","createAnswerList","answers","answerList","innerHTML","length","index","inputId","item","infWrap","buttonsBlock","prevButton","Prev","nextButton","Next","Quiz","round","description","body","querySelector","showResult","main","header","footer","quiz"],"sourceRoot":""}